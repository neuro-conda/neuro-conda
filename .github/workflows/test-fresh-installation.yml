name: Test Installation
run-name: ${{ github.actor }} is running tests
on: [push]  
env:
  ncDebug: 1
  ncCI: 1
  ncEnv: neuro-conda-2025a
jobs:
  Test-Install:
    name: Install (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "windows-latest", "ubuntu-latest"]
        python-version: ["3.12"]
        include:
          - os: windows-latest
            install_script: .\libexec\install.ps1
            uninstall_script: .\libexec\uninstall.ps1
            use_shell : pwsh
            prepare_shell: Invoke-Expression "$Env:userprofile\miniforge3\shell\condabin\conda-hook.ps1"
          - os: macos-latest
            install_script: ./libexec/install.sh
            uninstall_script: ./libexec/uninstall.sh
            use_shell : zsh -il {0}
            prepare_shell: source ~/.zshrc
          - os: ubuntu-latest
            install_script: ./libexec/install.sh
            uninstall_script: ./libexec/uninstall.sh
            use_shell : bash -il {0}
            prepare_shell: source ~/.bashrc
    defaults:
      run:
        shell: ${{ matrix.use_shell }}
    steps:
      - name: Free Disk Space (Ubuntu)        
        if: runner.os == 'Linux'
        run: |
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Download repository
        uses: actions/checkout@v3
      - name: Install system packages on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libgl1 libegl1 -y
      - name: Run installation script ${{ matrix.install_script }} for ${{ matrix.os }}
        run: ${{ matrix.install_script }}
      - name: Activate environment ${{ env.ncEnv }} and run tests on ${{ matrix.os }}
        run: |
          ${{ matrix.prepare_shell }}
          conda activate ${{ env.ncEnv }}
          pytest -sv
      - name: Run uninstall script ${{ matrix.uninstall_script }} for ${{ matrix.os }}
        run: |
          ${{ matrix.prepare_shell }}
          ${{ matrix.uninstall_script }}
